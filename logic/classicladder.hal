
# (load the realtime portion)
# these classicladder parameters need to be optimized after ladder completion
loadrt classicladder_rt numRungs=12 numBits=20 numWords=4 numTimers=20 numMonostables=2 numPhysInputs=15 numPhysOutputs=30 numArithmExpr=4 numSections=4
# We kick ladder into a thread at the slower servo rate rather than base rate
addf classicladder.0.refresh        servo-thread 1

# invoke the user part of CL to silently load the program
# later we will need to add the clp file mentioned below
# to the ini file so that we do not need to hardcode it here.s
#loadusr -w classicladder  logic/demo_sim_cl.clp
loadusr -w classicladder --nogui logic/demo_sim_cl.clp

# estop signals
# signal is the internal or gui estop command from EMC
net gui-estop  classicladder.0.in-00
# one-shot on  timer when signal above goes high.
net estop-strobe   classicladder.0.in-02
# this bit is an external estop button connected to parport pin 11 and ground
net ext-estop classicladder.0.in-01
# This bit signal is comand to estop from CL to EMC
net estop-out  classicladder.0.out-00 
net a.pump.Fault classicladder.0.in-06 #//подключить сигналы с насосов 
net b.pump.Fault classicladder.0.in-07
net mixer.Fault classicladder.0.in-04
net flushing.is-on classicladder.0.in-08
net machine.is-on classicladder.0.in-09
net abort classicladder.0.out-03 halui.abort
net gask-stop classicladder.0.out-04 gasketing.pump_fault
net clas-flush classicladder.0.out-05 halui.mdi-command-01
net a_error classicladder.0.out-09 => logic.0.in-01
net b_error classicladder.0.out-12 => logic.0.in-02
net m_error classicladder.0.out-13 => logic.0.in-00


